---
- name: install keystone packages
  yum: pkg={{ item }} state=present
  with_items:
    - openstack-keystone
    - openstack-utils
    - openstack-selinux
  tags: keystone

- name: generate keystone config file
  template: src=keystone.conf.j2 dest=/etc/keystone/keystone.conf mode=0640 owner=root group=keystone
  notify: restart keystone
  tags: keystone

# the service should be started by pcs or systemd on rhel7
#- name: disable the keystone services
#  service: name=openstack-keystone enabled=no
#  tags: keystone

- name: create certs for keystone
  command: creates=/etc/keystone/ssl/certs/ca.pem /usr/bin/keystone-manage pki_setup --keystone-user keystone --keystone-group keystone
  when: inventory_hostname == first_controller
  tags: keystone

- name: fetch keystone signing cert from the first controller
  fetch: src=/etc/keystone/ssl/certs/signing_cert.pem dest=special/{{ first_controller }}-keystone-signing_cert.pem flat=yes
  when: inventory_hostname == first_controller
  tags: keystone

- name: fetch keyfile for token signing
  fetch: src=/etc/keystone/ssl/private/signing_key.pem dest=special/{{ first_controller }}-keystone-signing_key.pem flat=yes
  when: inventory_hostname == first_controller
  tags: keystone

- name: fetch CA for token signing
  fetch: src=/etc/keystone/ssl/certs/ca.pem dest=special/{{ first_controller }}-keystone-ca.pem flat=yes
  when: inventory_hostname == first_controller
  tags: keystone

- name: fetch CA key for token signing
  fetch: src=/etc/keystone/ssl/private/cakey.pem dest=special/{{ first_controller }}-keystone-cakey.pem flat=yes
  when: inventory_hostname == first_controller
  tags: keystone

- name: fix keystone certs directory ownership
  file: path=/etc/keystone/ssl owner=keystone group=keystone state=directory recurse=true
  tags: keystone

- name: fix keystone certs directory ownership
  file: path=/etc/keystone/ssl/certs owner=keystone group=keystone state=directory recurse=true
  tags: keystone

- name: fix keystone certs directory ownership
  file: path=/etc/keystone/ssl/private owner=keystone group=keystone state=directory recurse=true
  tags: keystone

- name: fix keystone logs directory ownership
  file: path=/var/log/keystone owner=keystone group=keystone state=directory recurse=true
  tags: keystone

- name: distribute keystone signing cert to other controllers
  copy: src=special/{{ first_controller }}-keystone-signing_cert.pem dest=/etc/keystone/ssl/certs/signing_cert.pem mode=0644 owner=keystone group=keystone
  tags: keystone

- name: distribute keyfile for token signing to other controllers
  copy: src=special/{{ first_controller }}-keystone-signing_key.pem dest=/etc/keystone/ssl/private/signing_key.pem mode=0640 owner=keystone group=keystone
  tags: keystone

- name: distribute CA for token signing to other controllers
  copy: src=special/{{ first_controller }}-keystone-ca.pem dest=/etc/keystone/ssl/certs/ca.pem mode=0644 owner=keystone group=keystone
  tags: keystone

- name: distribute CA key for token signing to other controllers
  copy: src=special/{{ first_controller }}-keystone-cakey.pem dest=/etc/keystone/ssl/private/cakey.pem mode=0640 owner=keystone group=keystone
  tags: keystone

- name: run db_sync for keystone
  shell: creates=/etc/keystone/db.synced su keystone -s /bin/sh -c '/usr/bin/keystone-manage db_sync'; touch /etc/keystone/db.synced
  when: inventory_hostname == first_controller
  tags: keystone

- name: start the keystone services
  service: name=openstack-keystone enabled=yes state=started
  tags: keystone

- name: copy the file for data insertion into keystone
  template: src=keystone_data.sh.j2 dest=/tmp/keystone_data.sh mode=0755
  when: inventory_hostname == first_controller
  tags: keystone

- name: deploy the keystonerc_admin file
  template: src=keystonerc_admin.j2 dest=/root/keystonerc_admin mode=0750
  tags: keystone

- name: upload the data to keystone database
  shell: creates=/etc/keystone/db.updated /tmp/keystone_data.sh; touch /etc/keystone/db.updated
  when: inventory_hostname == first_controller
  tags: keystone-data

