---
- name: install database and related packages
  yum: pkg={{ item }} state=present
  with_items:
    - mariadb-galera-server
    - MySQL-python
    - xinetd
    - nfs-utils
      # The following is needed for the galera resource agent, if outside VPN download this file ahead of time
      #    - http://download.devel.redhat.com/brewroot/packages/resource-agents/3.9.5/26.el7_0.2/x86_64/resource-agents-3.9.5-26.el7_0.2.x86_64.rpm
    - http://download.devel.redhat.com/brewroot/packages/resource-agents/3.9.5/31.el7/x86_64/resource-agents-3.9.5-31.el7.x86_64.rpm
  tags: mysql

- name: deploy clustercheck
  template: src=clustercheck.j2 dest=/etc/sysconfig/clustercheck mode=0644 owner=root group=root
  tags: mysql

- name: checking if cluster is already setup
  command: clustercheck
  register: db_running
  ignore_errors: True
  tags: mysql

- name: deploy local galera.cnf on controllers
  template: src=galera-local.cnf.j2 dest=/etc/my.cnf.d/galera.cnf mode=0644 owner=root group=root
  when: db_running.rc != 0
  tags: mysql

- name: start local mariadb server
  service: name=mariadb state=started
  when: db_running.rc != 0
  tags:
    - mysql

- name: pause to let database start
  pause: seconds=5
  when: db_running.rc != 0
  tags:
      - mysql

- name: create clustercheck database user
  mysql_user: name={{ clustercheck_db_user }} host=localhost password={{ clustercheck_db_pass }} state=present
  tags:
    - mysql

- name: stop and disable mariadb service
  service: name=mariadb enabled=no state=stopped
  tags: mysql

- name: deploy mariadb server config file with increased number of max_connections
  copy: src=server.cnf dest=/etc/my.cnf.d/server.cnf mode=0644 owner=root group=root
  tags: mysql

- name: deploy galera.cnf on controllers
  template: src=galera.cnf.j2 dest=/etc/my.cnf.d/galera.cnf mode=0644 owner=root group=root
  tags: mysql

- name: deploy galera-monitor config file
  copy: src=galera-monitor dest=/etc/xinetd.d/galera-monitor mode=0600 owner=root group=root
  tags: mysql

- name: enable xinetd service
  service: name=xinetd enabled=yes state=started
  tags: mysql

- name: create pacemaker resource for galera
  pcs_resource: command=create name=galera type=galera master=yes
  args:
    options:
      enable_creation: true
      wsrep_cluster_address: "{{ wsrep_cluster_address }}"
    meta:
      master-max: 3
      ordered: true
    operations:
      - action: promote
        options:
          timeout: 300s
          on-fail: block
  run_once: true
  tags: mysql

- name: pause to let galera start and form the cluster
  pause: seconds=60
  when: db_running.rc != 0
  tags: mysql

- name: create databases
  mysql_db: name={{ item }} state=present
  with_items:
    - keystone
    - glance
    - cinder
    - nova
    - neutron
    - heat
  run_once: true
  tags: mysql

- name: create keystone database users
  mysql_user: name={{ item.name }} host=% password={{ item.password }} priv={{ item.db }}.*:{{ item.priv }} state=present
  with_items:
    - { name: root, password: "{{ db_root_password }}", db: '*', priv: 'ALL,GRANT' }
    - { name: keystone, password: "{{ keystone_db_pass }}", db: keystone, priv: ALL }
    - { name: glance, password: "{{ glance_db_pass }}", db: glance, priv: ALL }
    - { name: cinder, password: "{{ cinder_db_pass }}", db: cinder, priv: ALL }
    - { name: nova, password: "{{ nova_db_pass }}", db: nova, priv: ALL }
    - { name: neutron, password: "{{ neutron_db_pass }}", db: neutron, priv: ALL }
    - { name: heat, password: "{{ heat_db_pass }}", db: heat, priv: ALL }
  run_once: true
  notify: flush db hosts
  tags: mysql
